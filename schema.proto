syntax = "proto3";

package eventgate;

option go_package = "eventgate";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";


service CloudEventsService {
  rpc Send(CloudEventInput) returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/send"
      body: "*"
    };
  }
  rpc Request(CloudEventInput) returns(CloudEvent){
    option (google.api.http) = {
      post: "/request"
      body: "*"
    };
  }
  rpc Receive(ReceiveRequest) returns(stream CloudEvent){
    option (google.api.http) = {
      post: "/receive"
      body: "*"
    };
  }
}

message ReceiveRequest {
  string type =1[(validator.field) = {regex : "^.{1,225}$"}];
  string subject =2;
}

message CloudEventInput {
  string specversion = 1[(validator.field) = {regex : "^.{1,225}$"}];
  string source = 2[(validator.field) = {regex : "^.{1,225}$"}];
  string type = 3[(validator.field) = {regex : "^.{1,225}$"}];
  string subject =4;
  string dataschema =5;
  google.protobuf.Struct attributes = 6;
  google.protobuf.Struct data = 7[(validator.field) = {msg_exists : true}];
}

message CloudEvent {
  string specversion = 1[(validator.field) = {regex : "^.{1,225}$"}];
  string id = 2[(validator.field) = {regex : "^.{1,225}$"}];
  string source = 3[(validator.field) = {regex : "^.{1,225}$"}];
  string type = 4[(validator.field) = {regex : "^.{1,225}$"}];
  string subject =5;
  string dataschema =6;
  google.protobuf.Struct attributes = 7;
  google.protobuf.Struct data = 8[(validator.field) = {msg_exists : true}];
  google.protobuf.Timestamp time =9;
}
