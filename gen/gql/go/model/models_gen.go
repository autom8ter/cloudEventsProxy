// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type CloudEvent struct {
	ID              string                 `json:"id"`
	Specversion     string                 `json:"specversion"`
	Source          string                 `json:"source"`
	Type            string                 `json:"type"`
	Subject         *string                `json:"subject"`
	Dataschema      *string                `json:"dataschema"`
	Datacontenttype *string                `json:"datacontenttype"`
	Data            map[string]interface{} `json:"data"`
	DataBase64      *string                `json:"data_base64"`
	Time            time.Time              `json:"time"`
}

type CloudEventInput struct {
	ID              *string                `json:"id"`
	Specversion     string                 `json:"specversion"`
	Source          string                 `json:"source"`
	Type            string                 `json:"type"`
	Subject         *string                `json:"subject"`
	Dataschema      *string                `json:"dataschema"`
	Datacontenttype *string                `json:"datacontenttype"`
	Data            map[string]interface{} `json:"data"`
	DataBase64      *string                `json:"data_base64"`
	Time            *time.Time             `json:"time"`
}

type Filter struct {
	Matchers map[string]interface{} `json:"matchers"`
}
