// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Eventgate {

  /// <summary>Holder for reflection information generated from schema.proto</summary>
  public static partial class SchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzY2hlbWEucHJvdG8SCWV2ZW50Z2F0ZRocZ29vZ2xlL2FwaS9hbm5vdGF0",
            "aW9ucy5wcm90bxocZ29vZ2xlL3Byb3RvYnVmL3N0cnVjdC5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoZZ29vZ2xlL3Byb3RvYnVm",
            "L2FueS5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGjZnaXRo",
            "dWIuY29tL213aXRrb3cvZ28tcHJvdG8tdmFsaWRhdG9ycy92YWxpZGF0b3Iu",
            "cHJvdG8inwEKC0hpc3RvcnlPcHRzEhcKB2NoYW5uZWwYASABKAlCBuLfHwJY",
            "ARInCgNtaW4YAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEicK",
            "A21heBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFQoFbGlt",
            "aXQYBCABKANCBuLfHwIQABIOCgZvZmZzZXQYBSABKAMiJgoLUmVjZWl2ZU9w",
            "dHMSFwoHY2hhbm5lbBgBIAEoCUIG4t8fAlgBItkBCgVFdmVudBIKCgJpZBgB",
            "IAEoCRIXCgdjaGFubmVsGAIgASgJQgbi3x8CWAESLQoEZGF0YRgFIAEoCzIX",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCBuLfHwIgARIpCghtZXRhZGF0YRgG",
            "IAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSJwoGY2xhaW1zGAcgASgL",
            "MhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIoCgR0aW1lGBQgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcCIqCgZFdmVudHMSIAoGZXZlbnRzGAEg",
            "AygLMhAuZXZlbnRnYXRlLkV2ZW50MucBChBFdmVudEdhdGVTZXJ2aWNlEkIK",
            "BFNlbmQSEC5ldmVudGdhdGUuRXZlbnQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiEILT5JMCCiIFL3NlbmQ6ASoSRwoHUmVjZWl2ZRIWLmV2ZW50Z2F0ZS5S",
            "ZWNlaXZlT3B0cxoQLmV2ZW50Z2F0ZS5FdmVudCIQgtPkkwIKEggvcmVjZWl2",
            "ZTABEkYKB0hpc3RvcnkSFi5ldmVudGdhdGUuSGlzdG9yeU9wdHMaES5ldmVu",
            "dGdhdGUuRXZlbnRzIhCC0+STAgoSCC9oaXN0b3J5QgtaCWV2ZW50Z2F0ZWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Validator.ValidatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventgate.HistoryOpts), global::Eventgate.HistoryOpts.Parser, new[]{ "Channel", "Min", "Max", "Limit", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventgate.ReceiveOpts), global::Eventgate.ReceiveOpts.Parser, new[]{ "Channel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventgate.Event), global::Eventgate.Event.Parser, new[]{ "Id", "Channel", "Data", "Metadata", "Claims", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventgate.Events), global::Eventgate.Events.Parser, new[]{ "Events_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// HistoryOpts are options when querying historical events
  /// </summary>
  public sealed partial class HistoryOpts : pb::IMessage<HistoryOpts> {
    private static readonly pb::MessageParser<HistoryOpts> _parser = new pb::MessageParser<HistoryOpts>(() => new HistoryOpts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryOpts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventgate.SchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryOpts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryOpts(HistoryOpts other) : this() {
      channel_ = other.channel_;
      min_ = other.min_ != null ? other.min_.Clone() : null;
      max_ = other.max_ != null ? other.max_.Clone() : null;
      limit_ = other.limit_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryOpts Clone() {
      return new HistoryOpts(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp min_;
    /// <summary>
    /// only return events that occurred after specified min timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp max_;
    /// <summary>
    /// only return events that occurred before specified max timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private long limit_;
    /// <summary>
    /// limit returned events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    /// <summary>
    /// offset returned events(pagination)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryOpts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryOpts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!object.Equals(Min, other.Min)) return false;
      if (!object.Equals(Max, other.Max)) return false;
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (min_ != null) hash ^= Min.GetHashCode();
      if (max_ != null) hash ^= Max.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (min_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Min);
      }
      if (max_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Max);
      }
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (min_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Min);
      }
      if (max_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Max);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryOpts other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.min_ != null) {
        if (min_ == null) {
          min_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Min.MergeFrom(other.Min);
      }
      if (other.max_ != null) {
        if (max_ == null) {
          max_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Max.MergeFrom(other.Max);
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            if (min_ == null) {
              min_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(min_);
            break;
          }
          case 26: {
            if (max_ == null) {
              max_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(max_);
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ReceiveOpts filters events before they are received by a consumer
  /// </summary>
  public sealed partial class ReceiveOpts : pb::IMessage<ReceiveOpts> {
    private static readonly pb::MessageParser<ReceiveOpts> _parser = new pb::MessageParser<ReceiveOpts>(() => new ReceiveOpts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveOpts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventgate.SchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveOpts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveOpts(ReceiveOpts other) : this() {
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveOpts Clone() {
      return new ReceiveOpts(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveOpts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveOpts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveOpts other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Event is a specification for describing event data
  /// </summary>
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventgate.SchemaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      id_ = other.id_;
      channel_ = other.channel_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      claims_ = other.claims_ != null ? other.claims_.Clone() : null;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Identifies the event. If an ID is not sent with the event, a uuid will be assigned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    /// <summary>
    /// Identifies the channel/subject to which the event will be sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Struct data_;
    /// <summary>
    /// The event payload(structured).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Struct metadata_;
    /// <summary>
    /// Arbitrary metadata about the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "claims" field.</summary>
    public const int ClaimsFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Struct claims_;
    /// <summary>
    /// The authentication claims of the event producer. This field is populated/overriden by the server before it is broadcasted to consumers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Claims {
      get { return claims_; }
      set {
        claims_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 20;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    /// Timestamp of when the occurrence happened. Must adhere to RFC 3339. If a timestamp is not sent with the event, the current time will be assigned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Channel != other.Channel) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Claims, other.Claims)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (claims_ != null) hash ^= Claims.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (data_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Data);
      }
      if (metadata_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Metadata);
      }
      if (claims_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Claims);
      }
      if (time_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (claims_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Claims);
      }
      if (time_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          metadata_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.claims_ != null) {
        if (claims_ == null) {
          claims_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Claims.MergeFrom(other.Claims);
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 42: {
            if (data_ == null) {
              data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(data_);
            break;
          }
          case 50: {
            if (metadata_ == null) {
              metadata_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(metadata_);
            break;
          }
          case 58: {
            if (claims_ == null) {
              claims_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(claims_);
            break;
          }
          case 162: {
            if (time_ == null) {
              time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(time_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Events is an array of events
  /// </summary>
  public sealed partial class Events : pb::IMessage<Events> {
    private static readonly pb::MessageParser<Events> _parser = new pb::MessageParser<Events>(() => new Events());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Events> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventgate.SchemaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events(Events other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events Clone() {
      return new Events(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int Events_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Eventgate.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Eventgate.Event.Parser);
    private readonly pbc::RepeatedField<global::Eventgate.Event> events_ = new pbc::RepeatedField<global::Eventgate.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Eventgate.Event> Events_ {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Events);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Events other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Events other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
