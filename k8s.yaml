apiVersion: v1
kind: Namespace
metadata:
  name: stategate-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: stategate-configmap
data:
  stategate.yaml: |
    # port to serve on. metrics server is started on this port+1 if enabled
    port: 8080
    # enable graphQL API
    graphql: true
    # enable rest API
    rest: true
    # enable metrics server
    metrics: true
    # enable grpcweb support
    grpcweb: true
    cors:
      allowed_origins:
        - "*"
      allowed_methods:
        - "POST"
        - "PUT"
        - "GET"
        - "OPTIONS"
      allowed_headers:
        - "*"
    #tls:
    #  cert_file: "/tmp/server.cert"
    #  key_file: "/tmp/server.key"
    logging:
      # enable debug logs
      debug: true

    # pluggable backend: [inmem, redis, nats, stan]
    backend:
      name: "inmem"

    #backend:
    #  name: "redis"
    #  config:
    #    addr: "0.0.0.0:6379"
    #backend:
    #  name: "nats"
    #  config:
    #    addr: "0.0.0.0:4444"
    #backend:
    #  name: "stan"
    #  config:
    #    addr: "0.0.0.0:4444"
    #backend:
    #  name: "stan"
    #  config:
    #    addr: "0.0.0.0:4444"

    # authentication options
    authentication:
      # json web keys uri for authentication.
      # if empty, inbound jwt's will not be verified.
      jwks_uri: ""

    # authorization options
    authorization:
      requests: |
        package stategate.authz

        default allow = false

        allow {
          input.claims.sub = "1234567890"
          input.claims.name = "John Doe"
        }
      responses: |
        package stategate.authz

        default allow = true

---
apiVersion: v1
kind: Service
metadata:
  name: stategate-service
  namespace: stategate-system
  labels:
    app: stategate
spec:
  ports:
  - port: 8080
    name: api
  - port: 8081
    name: metrics
  clusterIP: None
  selector:
    app: stategate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stategate
  namespace: stategate-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stategate
  template:
    metadata:
      labels:
        app: stategate
    spec:
      containers:
        - name: stategate
          env:
            - name: STATEGATE_CONFIG
              value: /tmp/stategate.yaml
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: "colemanword/stategate:v0.2.1"
          imagePullPolicy: Always
          ports:
          - containerPort: 8081
          - containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: "/tmp"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: stategate-configmap

---
