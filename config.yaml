# port to serve on. metrics server is started on this port+1 if enabled
port: 8080
# enable graphQL API
graphql: true
# enable rest API
rest: true
# enable metrics server
metrics: true
# enable grpcweb support
grpcweb: true
cors:
  allowed_origins:
    - "*"
  allowed_methods:
    - "POST"
    - "PUT"
    - "GET"
    - "OPTIONS"
  allowed_headers:
    - "*"
#tls:
#  cert_file: "/tmp/server.cert"
#  key_file: "/tmp/server.key"
logging:
  # enable debug logs
  debug: true


backend:
  # pluggable channel providers: [inmem, redis, nats, stan, kafka, google-pubsub, aws-sqs]
  channel_provider:
    name: "nats"
    config:
      addr: "0.0.0.0:4444"
  #channel_provider:
  #  name: "redis"
  #  config:
  #    addr: "0.0.0.0:6379"
  #channel_provider:
  #  name: "nats"
  #  config:
  #    addr: "0.0.0.0:4444"
  #channel_provider:
  #  name: "stan"
  #  config:
  #    addr: "0.0.0.0:4444"
  #channel_provider:
  #  name: "stan"
  #  config:
  #    addr: "0.0.0.0:4444"

  # pluggable storage providers: [inmem, mongo]
#  storage_provider:
#    name: "mongo"
#    config:
#      uri: "mongodb://localhost:27017/testing"
#      database: "testing"
  storage_provider:
    name: "elasticsearch"
    config:
      addr: "http://localhost:9200"


# authentication options
authentication:
  # json web keys uri for authentication.
  # if empty, inbound jwt's will not be verified.
  jwks_uri: ""

# authorization options
authorization:
  requests: |
    package eventgate.authz

    default allow = false

    allow {
      input.claims.sub = "1234567890"
      input.claims.name = "John Doe"
    }
  responses: |
    package eventgate.authz

    default allow = true


