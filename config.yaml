# port to serve on. metrics server is started on this port+1 if enabled
port: 8080
cors:
  allowed_origins:
    - "*"
  allowed_methods:
    - "POST"
    - "PUT"
    - "GET"
    - "OPTIONS"
  allowed_headers:
    - "*"
#tls:
#  cert_file: "/tmp/server.cert"
#  key_file: "/tmp/server.key"
logging:
  # enable debug logs
  debug: true


backend:
  # pluggable channel providers: [inmem, redis, nats, stan, kafka, google-pubsub, aws-sqs]
  channel_provider:
    name: "nats"
    config:
      addr: "0.0.0.0:4444"
#     client_cert_file: "/tmp/nats.cert"
#     client_key_file: "/tmp/nats.key"
#  channel_provider:
#    name: "redis"
#    config:
#      addr: "0.0.0.0:6379"
#      user: "default"
#      password: "admin1234"
#      client_cert_file: "/tmp/redis.cert"
#      client_key_file: "/tmp/redis.key"

#  channel_provider:
#    name: "stan"
#    config:
#      addr: "0.0.0.0:4444"
#      client_cert_file: "/tmp/stan.cert"
#      client_key_file: "/tmp/stan.key"

# pluggable storage providers: [mongo, elasticsearch]
  
  storage_provider:
    name: "mongo"
    config:
      addr: "mongodb://localhost:27017/testing"
      database: "testing"
#      client_cert_file: "/tmp/mongo.cert"
#      client_key_file: "/tmp/mongo.key"
#  storage_provider:
#    name: "elasticsearch"
#    config:
#      addr: "http://localhost:9200"
#     user: "default"
#     password: "admin1234"


# authentication options
authentication:
  # json web keys uri for authentication.
  # if empty, inbound jwt's will not be verified.
  jwks_uri: ""

# authorization options
authorization:
  requests: |
    package stategate.authz

    default allow = false

    allow {
      input.claims.sub = "1234567890"
      input.claims.name = "John Doe"
    }
  responses: |
    package stategate.authz

    default allow = true


